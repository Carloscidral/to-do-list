{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/task.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ListComponent_li_9_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", task_r1, \" \");\n  }\n}\nfunction ListComponent_li_9_input_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 16);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function ListComponent_li_9_input_2_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      i0.ɵɵtwoWayBindingSet(ctx_r2.editTaskText, $event) || (ctx_r2.editTaskText = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵlistener(\"keydown.enter\", function ListComponent_li_9_input_2_Template_input_keydown_enter_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.onEnterKey(\"saveTask\"));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.editTaskText);\n  }\n}\nfunction ListComponent_li_9_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function ListComponent_li_9_ng_container_4_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const i_r5 = i0.ɵɵnextContext().index;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.startEditTask(ctx_r2.currentList, i_r5));\n    });\n    i0.ɵɵelement(2, \"img\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function ListComponent_li_9_ng_container_4_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const i_r5 = i0.ɵɵnextContext().index;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.removeTask(ctx_r2.currentList, i_r5));\n    });\n    i0.ɵɵelement(4, \"img\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction ListComponent_li_9_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function ListComponent_li_9_ng_container_5_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.saveTaskEdit());\n    });\n    i0.ɵɵelement(2, \"img\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function ListComponent_li_9_ng_container_5_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.cancelTaskEdit());\n    });\n    i0.ɵɵelement(4, \"img\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction ListComponent_li_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 10);\n    i0.ɵɵtemplate(1, ListComponent_li_9_span_1_Template, 2, 1, \"span\", 11)(2, ListComponent_li_9_input_2_Template, 1, 1, \"input\", 12);\n    i0.ɵɵelementStart(3, \"div\", 13);\n    i0.ɵɵtemplate(4, ListComponent_li_9_ng_container_4_Template, 5, 0, \"ng-container\", 14)(5, ListComponent_li_9_ng_container_5_Template, 5, 0, \"ng-container\", 14);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const i_r5 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.isEditingTask(ctx_r2.currentList, i_r5));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isEditingTask(ctx_r2.currentList, i_r5));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.isEditingTask(ctx_r2.currentList, i_r5));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isEditingTask(ctx_r2.currentList, i_r5));\n  }\n}\nfunction ListComponent_li_17_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 27);\n    i0.ɵɵlistener(\"click\", function ListComponent_li_17_span_1_Template_span_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const listName_r8 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.selectList(listName_r8));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const listName_r8 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", listName_r8 === ctx_r2.currentList);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", listName_r8, \" \");\n  }\n}\nfunction ListComponent_li_17_input_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 16);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function ListComponent_li_17_input_2_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      i0.ɵɵtwoWayBindingSet(ctx_r2.editListText, $event) || (ctx_r2.editListText = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵlistener(\"keydown.enter\", function ListComponent_li_17_input_2_Template_input_keydown_enter_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.onEnterKey(\"saveList\"));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.editListText);\n  }\n}\nfunction ListComponent_li_17_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function ListComponent_li_17_ng_container_4_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const listName_r8 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.startEditList(listName_r8));\n    });\n    i0.ɵɵelement(2, \"img\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function ListComponent_li_17_ng_container_4_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const listName_r8 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.removeList(listName_r8));\n    });\n    i0.ɵɵelement(4, \"img\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction ListComponent_li_17_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function ListComponent_li_17_ng_container_5_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.saveListEdit());\n    });\n    i0.ɵɵelement(2, \"img\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function ListComponent_li_17_ng_container_5_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.cancelListEdit());\n    });\n    i0.ɵɵelement(4, \"img\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction ListComponent_li_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 25);\n    i0.ɵɵtemplate(1, ListComponent_li_17_span_1_Template, 2, 3, \"span\", 26)(2, ListComponent_li_17_input_2_Template, 1, 1, \"input\", 12);\n    i0.ɵɵelementStart(3, \"div\", 13);\n    i0.ɵɵtemplate(4, ListComponent_li_17_ng_container_4_Template, 5, 0, \"ng-container\", 14)(5, ListComponent_li_17_ng_container_5_Template, 5, 0, \"ng-container\", 14);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const listName_r8 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.isEditingList(listName_r8));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isEditingList(listName_r8));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.isEditingList(listName_r8));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isEditingList(listName_r8));\n  }\n}\nexport class ListComponent {\n  constructor(taskService) {\n    this.taskService = taskService;\n    this.newTask = '';\n    this.newListName = '';\n    this.lists = {};\n    this.currentList = null;\n    this.currentListTasks = [];\n    // Estados de edição\n    this.editingTask = null;\n    this.editingList = null;\n    this.editTaskText = '';\n    this.editListText = '';\n  }\n  ngOnInit() {\n    // Inscrever-se para mudanças nas listas\n    this.taskService.lists$.subscribe(lists => {\n      this.lists = lists;\n    });\n    // Inscrever-se para mudanças na lista atual\n    this.taskService.currentList$.subscribe(currentList => {\n      this.currentList = currentList;\n      this.currentListTasks = this.taskService.getCurrentListTasks();\n    });\n  }\n  // Adicionar nova tarefa\n  addTask() {\n    const result = this.taskService.addTask(this.newTask);\n    if (result.success) {\n      this.newTask = '';\n      this.currentListTasks = this.taskService.getCurrentListTasks();\n    } else {\n      alert(result.message);\n    }\n  }\n  // Adicionar nova lista\n  addList() {\n    const result = this.taskService.addList(this.newListName);\n    if (result.success) {\n      this.newListName = '';\n    } else {\n      alert(result.message);\n    }\n  }\n  // Selecionar lista\n  selectList(listName) {\n    this.taskService.selectList(listName);\n  }\n  // Iniciar edição de tarefa\n  startEditTask(listName, index) {\n    this.editingTask = {\n      listName,\n      index\n    };\n    this.editTaskText = this.lists[listName][index];\n  }\n  // Salvar edição de tarefa\n  saveTaskEdit() {\n    if (this.editingTask) {\n      const result = this.taskService.editTask(this.editingTask.listName, this.editingTask.index, this.editTaskText);\n      if (result.success) {\n        this.editingTask = null;\n        this.editTaskText = '';\n        this.currentListTasks = this.taskService.getCurrentListTasks();\n      } else {\n        alert(result.message);\n      }\n    }\n  }\n  // Cancelar edição de tarefa\n  cancelTaskEdit() {\n    this.editingTask = null;\n    this.editTaskText = '';\n  }\n  // Remover tarefa\n  removeTask(listName, index) {\n    this.taskService.removeTask(listName, index);\n    this.currentListTasks = this.taskService.getCurrentListTasks();\n  }\n  // Iniciar edição de lista\n  startEditList(listName) {\n    this.editingList = listName;\n    this.editListText = listName;\n  }\n  // Salvar edição de lista\n  saveListEdit() {\n    if (this.editingList) {\n      const result = this.taskService.editListName(this.editingList, this.editListText);\n      if (result.success) {\n        this.editingList = null;\n        this.editListText = '';\n      } else {\n        alert(result.message);\n      }\n    }\n  }\n  // Cancelar edição de lista\n  cancelListEdit() {\n    this.editingList = null;\n    this.editListText = '';\n  }\n  // Remover lista\n  removeList(listName) {\n    this.taskService.removeList(listName);\n  }\n  // Obter nomes das listas\n  getListNames() {\n    return Object.keys(this.lists);\n  }\n  // Verificar se está editando uma tarefa específica\n  isEditingTask(listName, index) {\n    return this.editingTask?.listName === listName && this.editingTask?.index === index;\n  }\n  // Verificar se está editando uma lista específica\n  isEditingList(listName) {\n    return this.editingList === listName;\n  }\n  // Manipular Enter em campos de input\n  onEnterKey(action) {\n    switch (action) {\n      case 'addTask':\n        this.addTask();\n        break;\n      case 'addList':\n        this.addList();\n        break;\n      case 'saveTask':\n        this.saveTaskEdit();\n        break;\n      case 'saveList':\n        this.saveListEdit();\n        break;\n    }\n  }\n  static {\n    this.ɵfac = function ListComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ListComponent)(i0.ɵɵdirectiveInject(i1.TaskService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ListComponent,\n      selectors: [[\"app-list\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 18,\n      vars: 5,\n      consts: [[1, \"conteudo\"], [1, \"postit\"], [\"type\", \"text\", \"placeholder\", \"Digite uma tarefa\", 1, \"task-input\", 3, \"ngModelChange\", \"keydown.enter\", \"ngModel\"], [1, \"botao\", 3, \"click\"], [1, \"lista-tarefas\"], [\"class\", \"task-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"listas-cadastradas\"], [\"type\", \"text\", \"placeholder\", \"Digite o nome da lista\", 1, \"list-input\", 3, \"ngModelChange\", \"keydown.enter\", \"ngModel\"], [\"id\", \"outras-listas\"], [\"class\", \"list-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"task-item\"], [\"class\", \"task-text\", 4, \"ngIf\"], [\"type\", \"text\", \"class\", \"edit-input\", 3, \"ngModel\", \"ngModelChange\", \"keydown.enter\", 4, \"ngIf\"], [1, \"acoes\"], [4, \"ngIf\"], [1, \"task-text\"], [\"type\", \"text\", 1, \"edit-input\", 3, \"ngModelChange\", \"keydown.enter\", \"ngModel\"], [\"title\", \"Editar\", 1, \"action-btn\", 3, \"click\"], [\"src\", \"assets/img/botao-editar.svg\", \"alt\", \"Editar\"], [\"title\", \"Excluir\", 1, \"action-btn\", 3, \"click\"], [\"src\", \"assets/img/lixeira-de-reciclagem.svg\", \"alt\", \"Excluir\"], [\"title\", \"Salvar\", 1, \"action-btn\", 3, \"click\"], [\"src\", \"assets/img/salvar.svg\", \"alt\", \"Salvar\"], [\"title\", \"Cancelar\", 1, \"action-btn\", 3, \"click\"], [\"src\", \"assets/img/cancelar.svg\", \"alt\", \"Cancelar\"], [1, \"list-item\"], [\"class\", \"list-name\", 3, \"active\", \"click\", 4, \"ngIf\"], [1, \"list-name\", 3, \"click\"]],\n      template: function ListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"main\")(1, \"div\", 0)(2, \"div\", 1)(3, \"h2\");\n          i0.ɵɵtext(4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"input\", 2);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function ListComponent_Template_input_ngModelChange_5_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.newTask, $event) || (ctx.newTask = $event);\n            return $event;\n          });\n          i0.ɵɵlistener(\"keydown.enter\", function ListComponent_Template_input_keydown_enter_5_listener() {\n            return ctx.onEnterKey(\"addTask\");\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function ListComponent_Template_button_click_6_listener() {\n            return ctx.addTask();\n          });\n          i0.ɵɵtext(7, \" Adicionar tarefa \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"ul\", 4);\n          i0.ɵɵtemplate(9, ListComponent_li_9_Template, 6, 4, \"li\", 5);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"div\", 6)(11, \"h2\");\n          i0.ɵɵtext(12, \"Listas Cadastradas\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"input\", 7);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function ListComponent_Template_input_ngModelChange_13_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.newListName, $event) || (ctx.newListName = $event);\n            return $event;\n          });\n          i0.ɵɵlistener(\"keydown.enter\", function ListComponent_Template_input_keydown_enter_13_listener() {\n            return ctx.onEnterKey(\"addList\");\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function ListComponent_Template_button_click_14_listener() {\n            return ctx.addList();\n          });\n          i0.ɵɵtext(15, \" Adicionar Lista \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"ul\", 8);\n          i0.ɵɵtemplate(17, ListComponent_li_17_Template, 6, 4, \"li\", 9);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate(ctx.currentList || \"Organize seu dia\");\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newTask);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngForOf\", ctx.currentListTasks);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newListName);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngForOf\", ctx.getListNames());\n        }\n      },\n      dependencies: [CommonModule, i2.NgForOf, i2.NgIf, FormsModule, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n      styles: [\"\\n\\n\\nmain[_ngcontent-%COMP%] {\\n  flex: 1;\\n  display: flex;\\n  justify-content: center;\\n  align-items: flex-start;\\n  padding-top: 70px;\\n}\\n\\n.conteudo[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: flex-start;\\n  gap: 20px;\\n  width: 100%;\\n  max-width: 1000px;\\n  margin: 0 auto;\\n  padding: 20px;\\n}\\n\\n.postit[_ngcontent-%COMP%] {\\n  max-width: 400px;\\n  flex: 1;\\n  background: #b5f4bc;\\n  padding: 5px;\\n  border-radius: 10px;\\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  gap: 10px;\\n}\\n\\n.listas-cadastradas[_ngcontent-%COMP%] {\\n  flex: 1;\\n  background: #b5f4bc;\\n  padding: 5px;\\n  border-radius: 10px;\\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  gap: 10px;\\n}\\n\\n.task-input[_ngcontent-%COMP%], \\n.list-input[_ngcontent-%COMP%], \\n.edit-input[_ngcontent-%COMP%] {\\n  margin: 5px 0;\\n  padding: 8px;\\n  width: 100%;\\n  box-sizing: border-box;\\n  border: 1px solid #ccc;\\n  border-radius: 4px;\\n}\\n\\n.listas-cadastradas[_ngcontent-%COMP%]   .task-input[_ngcontent-%COMP%], \\n.listas-cadastradas[_ngcontent-%COMP%]   .list-input[_ngcontent-%COMP%] {\\n  margin: 10px;\\n  padding: 10px;\\n  width: 500px;\\n  box-sizing: border-box;\\n}\\n\\n.botao[_ngcontent-%COMP%] {\\n  margin: 5px 0;\\n  padding: 8px;\\n  width: 100%;\\n  box-sizing: border-box;\\n  cursor: pointer;\\n  background: #5f6368;\\n  color: #fff;\\n  border: none;\\n  border-radius: 5px;\\n  transition: background 0.3s;\\n}\\n\\n.botao[_ngcontent-%COMP%]:hover {\\n  background: #3c4043;\\n}\\n\\n.listas-cadastradas[_ngcontent-%COMP%]   .botao[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n  background: #5f6368;\\n  color: #fff;\\n  border: none;\\n  border-radius: 5px;\\n  margin: 5px 0px;\\n  padding: 8px;\\n  width: calc(100% - 20px);\\n}\\n\\n.listas-cadastradas[_ngcontent-%COMP%]   .botao[_ngcontent-%COMP%]:hover {\\n  background: #3c4043;\\n}\\n\\n.lista-tarefas[_ngcontent-%COMP%] {\\n  flex: 1 1 auto;\\n  overflow-y: auto;\\n  display: flex;\\n  flex-direction: column;\\n  gap: 10px;\\n  margin-top: 5px;\\n  list-style: none;\\n  padding: 0;\\n  margin-bottom: 0;\\n  width: 100%;\\n}\\n\\n.task-item[_ngcontent-%COMP%], \\n.list-item[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  width: 100%;\\n  max-width: 310px;\\n  background: #858087;\\n  margin-bottom: 8px;\\n  padding: 8px;\\n  border-radius: 4px;\\n  font-size: 16px;\\n  height: auto;\\n  box-sizing: border-box;\\n  overflow: hidden;\\n}\\n\\n.task-text[_ngcontent-%COMP%], \\n.list-name[_ngcontent-%COMP%] {\\n  flex: 1;\\n  min-width: 0;\\n  margin-right: 8px;\\n  color: white;\\n}\\n\\n.list-name[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n  transition: color 0.3s;\\n}\\n\\n.list-name[_ngcontent-%COMP%]:hover {\\n  color: #3cfd6c;\\n}\\n\\n.list-name.active[_ngcontent-%COMP%] {\\n  color: #3cfd6c;\\n  font-weight: bold;\\n}\\n\\n.acoes[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-shrink: 0;\\n  gap: 5px;\\n}\\n\\n.action-btn[_ngcontent-%COMP%] {\\n  background: white;\\n  border: none;\\n  cursor: pointer;\\n  width: 28px;\\n  height: 28px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  border-radius: 4px;\\n  margin: 0px;\\n  transition: background 0.3s;\\n}\\n\\n.action-btn[_ngcontent-%COMP%]:hover {\\n  background: #f0f0f0;\\n}\\n\\n.acoes[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  width: 18px;\\n  height: 18px;\\n  object-fit: contain;\\n}\\n\\n#outras-listas[_ngcontent-%COMP%] {\\n  list-style: none;\\n  padding: 0;\\n  margin: 5px 0px 16px;\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  gap: 8px;\\n}\\n\\n\\n\\n@media (max-width: 768px) {\\n  .conteudo[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n    align-items: center;\\n  }\\n\\n  .postit[_ngcontent-%COMP%], \\n   .listas-cadastradas[_ngcontent-%COMP%] {\\n    width: 90%;\\n    max-width: none;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9saXN0L2xpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwrREFBK0Q7O0FBRS9EO0VBQ0UsT0FBTztFQUNQLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsdUJBQXVCO0VBQ3ZCLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsdUJBQXVCO0VBQ3ZCLFNBQVM7RUFDVCxXQUFXO0VBQ1gsaUJBQWlCO0VBQ2pCLGNBQWM7RUFDZCxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsT0FBTztFQUNQLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osbUJBQW1CO0VBQ25CLHlDQUF5QztFQUN6QyxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLG1CQUFtQjtFQUNuQixTQUFTO0FBQ1g7O0FBRUE7RUFDRSxPQUFPO0VBQ1AsbUJBQW1CO0VBQ25CLFlBQVk7RUFDWixtQkFBbUI7RUFDbkIseUNBQXlDO0VBQ3pDLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsbUJBQW1CO0VBQ25CLFNBQVM7QUFDWDs7QUFFQTs7O0VBR0UsYUFBYTtFQUNiLFlBQVk7RUFDWixXQUFXO0VBQ1gsc0JBQXNCO0VBQ3RCLHNCQUFzQjtFQUN0QixrQkFBa0I7QUFDcEI7O0FBRUE7O0VBRUUsWUFBWTtFQUNaLGFBQWE7RUFDYixZQUFZO0VBQ1osc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLFlBQVk7RUFDWixXQUFXO0VBQ1gsc0JBQXNCO0VBQ3RCLGVBQWU7RUFDZixtQkFBbUI7RUFDbkIsV0FBVztFQUNYLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsMkJBQTJCO0FBQzdCOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsZUFBZTtFQUNmLG1CQUFtQjtFQUNuQixXQUFXO0VBQ1gsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2YsWUFBWTtFQUNaLHdCQUF3QjtBQUMxQjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxnQkFBZ0I7RUFDaEIsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixTQUFTO0VBQ1QsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQixVQUFVO0VBQ1YsZ0JBQWdCO0VBQ2hCLFdBQVc7QUFDYjs7QUFFQTs7RUFFRSxhQUFhO0VBQ2IsOEJBQThCO0VBQzlCLG1CQUFtQjtFQUNuQixXQUFXO0VBQ1gsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2YsWUFBWTtFQUNaLHNCQUFzQjtFQUN0QixnQkFBZ0I7QUFDbEI7O0FBRUE7O0VBRUUsT0FBTztFQUNQLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsWUFBWTtBQUNkOztBQUVBO0VBQ0UsZUFBZTtFQUNmLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsYUFBYTtFQUNiLGNBQWM7RUFDZCxRQUFRO0FBQ1Y7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsWUFBWTtFQUNaLGVBQWU7RUFDZixXQUFXO0VBQ1gsWUFBWTtFQUNaLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsMkJBQTJCO0FBQzdCOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsV0FBVztFQUNYLFlBQVk7RUFDWixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsVUFBVTtFQUNWLG9CQUFvQjtFQUNwQixXQUFXO0VBQ1gsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixtQkFBbUI7RUFDbkIsUUFBUTtBQUNWOztBQUVBLGVBQWU7QUFDZjtFQUNFO0lBQ0Usc0JBQXNCO0lBQ3RCLG1CQUFtQjtFQUNyQjs7RUFFQTs7SUFFRSxVQUFVO0lBQ1YsZUFBZTtFQUNqQjtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyogRXN0aWxvcyBkbyBjb21wb25lbnRlIExpc3RhIC0gYmFzZWFkbyBubyBsaXN0LmNzcyBvcmlnaW5hbCAqL1xyXG5cclxubWFpbiB7XHJcbiAgZmxleDogMTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG4gIHBhZGRpbmctdG9wOiA3MHB4O1xyXG59XHJcblxyXG4uY29udGV1ZG8ge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XHJcbiAgZ2FwOiAyMHB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIG1heC13aWR0aDogMTAwMHB4O1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbn1cclxuXHJcbi5wb3N0aXQge1xyXG4gIG1heC13aWR0aDogNDAwcHg7XHJcbiAgZmxleDogMTtcclxuICBiYWNrZ3JvdW5kOiAjYjVmNGJjO1xyXG4gIHBhZGRpbmc6IDVweDtcclxuICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gIGJveC1zaGFkb3c6IDAgNHB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjIpO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGdhcDogMTBweDtcclxufVxyXG5cclxuLmxpc3Rhcy1jYWRhc3RyYWRhcyB7XHJcbiAgZmxleDogMTtcclxuICBiYWNrZ3JvdW5kOiAjYjVmNGJjO1xyXG4gIHBhZGRpbmc6IDVweDtcclxuICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gIGJveC1zaGFkb3c6IDAgNHB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjIpO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGdhcDogMTBweDtcclxufVxyXG5cclxuLnRhc2staW5wdXQsXHJcbi5saXN0LWlucHV0LFxyXG4uZWRpdC1pbnB1dCB7XHJcbiAgbWFyZ2luOiA1cHggMDtcclxuICBwYWRkaW5nOiA4cHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcclxufVxyXG5cclxuLmxpc3Rhcy1jYWRhc3RyYWRhcyAudGFzay1pbnB1dCxcclxuLmxpc3Rhcy1jYWRhc3RyYWRhcyAubGlzdC1pbnB1dCB7XHJcbiAgbWFyZ2luOiAxMHB4O1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbiAgd2lkdGg6IDUwMHB4O1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn1cclxuXHJcbi5ib3RhbyB7XHJcbiAgbWFyZ2luOiA1cHggMDtcclxuICBwYWRkaW5nOiA4cHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgYmFja2dyb3VuZDogIzVmNjM2ODtcclxuICBjb2xvcjogI2ZmZjtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQgMC4zcztcclxufVxyXG5cclxuLmJvdGFvOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kOiAjM2M0MDQzO1xyXG59XHJcblxyXG4ubGlzdGFzLWNhZGFzdHJhZGFzIC5ib3RhbyB7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIGJhY2tncm91bmQ6ICM1ZjYzNjg7XHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICBtYXJnaW46IDVweCAwcHg7XHJcbiAgcGFkZGluZzogOHB4O1xyXG4gIHdpZHRoOiBjYWxjKDEwMCUgLSAyMHB4KTtcclxufVxyXG5cclxuLmxpc3Rhcy1jYWRhc3RyYWRhcyAuYm90YW86aG92ZXIge1xyXG4gIGJhY2tncm91bmQ6ICMzYzQwNDM7XHJcbn1cclxuXHJcbi5saXN0YS10YXJlZmFzIHtcclxuICBmbGV4OiAxIDEgYXV0bztcclxuICBvdmVyZmxvdy15OiBhdXRvO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBnYXA6IDEwcHg7XHJcbiAgbWFyZ2luLXRvcDogNXB4O1xyXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgcGFkZGluZzogMDtcclxuICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4udGFzay1pdGVtLFxyXG4ubGlzdC1pdGVtIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIG1heC13aWR0aDogMzEwcHg7XHJcbiAgYmFja2dyb3VuZDogIzg1ODA4NztcclxuICBtYXJnaW4tYm90dG9tOiA4cHg7XHJcbiAgcGFkZGluZzogOHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxufVxyXG5cclxuLnRhc2stdGV4dCxcclxuLmxpc3QtbmFtZSB7XHJcbiAgZmxleDogMTtcclxuICBtaW4td2lkdGg6IDA7XHJcbiAgbWFyZ2luLXJpZ2h0OiA4cHg7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG4ubGlzdC1uYW1lIHtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcztcclxufVxyXG5cclxuLmxpc3QtbmFtZTpob3ZlciB7XHJcbiAgY29sb3I6ICMzY2ZkNmM7XHJcbn1cclxuXHJcbi5saXN0LW5hbWUuYWN0aXZlIHtcclxuICBjb2xvcjogIzNjZmQ2YztcclxuICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG5cclxuLmFjb2VzIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtc2hyaW5rOiAwO1xyXG4gIGdhcDogNXB4O1xyXG59XHJcblxyXG4uYWN0aW9uLWJ0biB7XHJcbiAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICB3aWR0aDogMjhweDtcclxuICBoZWlnaHQ6IDI4cHg7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICBtYXJnaW46IDBweDtcclxuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuM3M7XHJcbn1cclxuXHJcbi5hY3Rpb24tYnRuOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kOiAjZjBmMGYwO1xyXG59XHJcblxyXG4uYWNvZXMgaW1nIHtcclxuICB3aWR0aDogMThweDtcclxuICBoZWlnaHQ6IDE4cHg7XHJcbiAgb2JqZWN0LWZpdDogY29udGFpbjtcclxufVxyXG5cclxuI291dHJhcy1saXN0YXMge1xyXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgcGFkZGluZzogMDtcclxuICBtYXJnaW46IDVweCAwcHggMTZweDtcclxuICB3aWR0aDogMTAwJTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBnYXA6IDhweDtcclxufVxyXG5cclxuLyogUmVzcG9uc2l2byAqL1xyXG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAuY29udGV1ZG8ge1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgfVxyXG5cclxuICAucG9zdGl0LFxyXG4gIC5saXN0YXMtY2FkYXN0cmFkYXMge1xyXG4gICAgd2lkdGg6IDkwJTtcclxuICAgIG1heC13aWR0aDogbm9uZTtcclxuICB9XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","FormsModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","task_r1","ɵɵtwoWayListener","ListComponent_li_9_input_2_Template_input_ngModelChange_0_listener","$event","ɵɵrestoreView","_r2","ctx_r2","ɵɵnextContext","ɵɵtwoWayBindingSet","editTaskText","ɵɵresetView","ɵɵlistener","ListComponent_li_9_input_2_Template_input_keydown_enter_0_listener","onEnterKey","ɵɵtwoWayProperty","ɵɵelementContainerStart","ListComponent_li_9_ng_container_4_Template_button_click_1_listener","_r4","i_r5","index","startEditTask","currentList","ɵɵelement","ListComponent_li_9_ng_container_4_Template_button_click_3_listener","removeTask","ListComponent_li_9_ng_container_5_Template_button_click_1_listener","_r6","saveTaskEdit","ListComponent_li_9_ng_container_5_Template_button_click_3_listener","cancelTaskEdit","ɵɵtemplate","ListComponent_li_9_span_1_Template","ListComponent_li_9_input_2_Template","ListComponent_li_9_ng_container_4_Template","ListComponent_li_9_ng_container_5_Template","ɵɵproperty","isEditingTask","ListComponent_li_17_span_1_Template_span_click_0_listener","_r7","listName_r8","$implicit","selectList","ɵɵclassProp","ListComponent_li_17_input_2_Template_input_ngModelChange_0_listener","_r9","editListText","ListComponent_li_17_input_2_Template_input_keydown_enter_0_listener","ListComponent_li_17_ng_container_4_Template_button_click_1_listener","_r10","startEditList","ListComponent_li_17_ng_container_4_Template_button_click_3_listener","removeList","ListComponent_li_17_ng_container_5_Template_button_click_1_listener","_r11","saveListEdit","ListComponent_li_17_ng_container_5_Template_button_click_3_listener","cancelListEdit","ListComponent_li_17_span_1_Template","ListComponent_li_17_input_2_Template","ListComponent_li_17_ng_container_4_Template","ListComponent_li_17_ng_container_5_Template","isEditingList","ListComponent","constructor","taskService","newTask","newListName","lists","currentListTasks","editingTask","editingList","ngOnInit","lists$","subscribe","currentList$","getCurrentListTasks","addTask","result","success","alert","message","addList","listName","editTask","editListName","getListNames","Object","keys","action","ɵɵdirectiveInject","i1","TaskService","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","ListComponent_Template","rf","ctx","ListComponent_Template_input_ngModelChange_5_listener","ListComponent_Template_input_keydown_enter_5_listener","ListComponent_Template_button_click_6_listener","ListComponent_li_9_Template","ListComponent_Template_input_ngModelChange_13_listener","ListComponent_Template_input_keydown_enter_13_listener","ListComponent_Template_button_click_14_listener","ListComponent_li_17_Template","ɵɵtextInterpolate","i2","NgForOf","NgIf","i3","DefaultValueAccessor","NgControlStatus","NgModel","styles"],"sources":["C:\\Users\\Lidiomar Cidral\\Desktop\\to-do-list-main\\src\\app\\components\\list\\list.component.ts","C:\\Users\\Lidiomar Cidral\\Desktop\\to-do-list-main\\src\\app\\components\\list\\list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TaskService } from '../../services/task.service';\r\nimport { ListsData } from '../../models/task.model';\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule],\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.css']\r\n})\r\nexport class ListComponent implements OnInit {\r\n  newTask = '';\r\n  newListName = '';\r\n  lists: ListsData = {};\r\n  currentList: string | null = null;\r\n  currentListTasks: string[] = [];\r\n  \r\n  // Estados de edição\r\n  editingTask: { listName: string; index: number } | null = null;\r\n  editingList: string | null = null;\r\n  editTaskText = '';\r\n  editListText = '';\r\n\r\n  constructor(private taskService: TaskService) {}\r\n\r\n  ngOnInit(): void {\r\n    // Inscrever-se para mudanças nas listas\r\n    this.taskService.lists$.subscribe((lists: ListsData) => {\r\n      this.lists = lists;\r\n    });\r\n\r\n    // Inscrever-se para mudanças na lista atual\r\n    this.taskService.currentList$.subscribe((currentList: string | null) => {\r\n      this.currentList = currentList;\r\n      this.currentListTasks = this.taskService.getCurrentListTasks();\r\n    });\r\n  }\r\n\r\n  // Adicionar nova tarefa\r\n  addTask(): void {\r\n    const result = this.taskService.addTask(this.newTask);\r\n    if (result.success) {\r\n      this.newTask = '';\r\n      this.currentListTasks = this.taskService.getCurrentListTasks();\r\n    } else {\r\n      alert(result.message);\r\n    }\r\n  }\r\n\r\n  // Adicionar nova lista\r\n  addList(): void {\r\n    const result = this.taskService.addList(this.newListName);\r\n    if (result.success) {\r\n      this.newListName = '';\r\n    } else {\r\n      alert(result.message);\r\n    }\r\n  }\r\n\r\n  // Selecionar lista\r\n  selectList(listName: string): void {\r\n    this.taskService.selectList(listName);\r\n  }\r\n\r\n  // Iniciar edição de tarefa\r\n  startEditTask(listName: string, index: number): void {\r\n    this.editingTask = { listName, index };\r\n    this.editTaskText = this.lists[listName][index];\r\n  }\r\n\r\n  // Salvar edição de tarefa\r\n  saveTaskEdit(): void {\r\n    if (this.editingTask) {\r\n      const result = this.taskService.editTask(\r\n        this.editingTask.listName, \r\n        this.editingTask.index, \r\n        this.editTaskText\r\n      );\r\n      if (result.success) {\r\n        this.editingTask = null;\r\n        this.editTaskText = '';\r\n        this.currentListTasks = this.taskService.getCurrentListTasks();\r\n      } else {\r\n        alert(result.message);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Cancelar edição de tarefa\r\n  cancelTaskEdit(): void {\r\n    this.editingTask = null;\r\n    this.editTaskText = '';\r\n  }\r\n\r\n  // Remover tarefa\r\n  removeTask(listName: string, index: number): void {\r\n    this.taskService.removeTask(listName, index);\r\n    this.currentListTasks = this.taskService.getCurrentListTasks();\r\n  }\r\n\r\n  // Iniciar edição de lista\r\n  startEditList(listName: string): void {\r\n    this.editingList = listName;\r\n    this.editListText = listName;\r\n  }\r\n\r\n  // Salvar edição de lista\r\n  saveListEdit(): void {\r\n    if (this.editingList) {\r\n      const result = this.taskService.editListName(this.editingList, this.editListText);\r\n      if (result.success) {\r\n        this.editingList = null;\r\n        this.editListText = '';\r\n      } else {\r\n        alert(result.message);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Cancelar edição de lista\r\n  cancelListEdit(): void {\r\n    this.editingList = null;\r\n    this.editListText = '';\r\n  }\r\n\r\n  // Remover lista\r\n  removeList(listName: string): void {\r\n    this.taskService.removeList(listName);\r\n  }\r\n\r\n  // Obter nomes das listas\r\n  getListNames(): string[] {\r\n    return Object.keys(this.lists);\r\n  }\r\n\r\n  // Verificar se está editando uma tarefa específica\r\n  isEditingTask(listName: string, index: number): boolean {\r\n    return this.editingTask?.listName === listName && this.editingTask?.index === index;\r\n  }\r\n\r\n  // Verificar se está editando uma lista específica\r\n  isEditingList(listName: string): boolean {\r\n    return this.editingList === listName;\r\n  }\r\n\r\n  // Manipular Enter em campos de input\r\n  onEnterKey(action: string): void {\r\n    switch (action) {\r\n      case 'addTask':\r\n        this.addTask();\r\n        break;\r\n      case 'addList':\r\n        this.addList();\r\n        break;\r\n      case 'saveTask':\r\n        this.saveTaskEdit();\r\n        break;\r\n      case 'saveList':\r\n        this.saveListEdit();\r\n        break;\r\n    }\r\n  }\r\n}","<main>\r\n  <div class=\"conteudo\">\r\n    <!-- Painel principal de tarefas -->\r\n    <div class=\"postit\">\r\n      <h2>{{ currentList || 'Organize seu dia' }}</h2>\r\n      \r\n      <!-- Input para nova tarefa -->\r\n      <input \r\n        type=\"text\" \r\n        [(ngModel)]=\"newTask\"\r\n        placeholder=\"Digite uma tarefa\"\r\n        (keydown.enter)=\"onEnterKey('addTask')\"\r\n        class=\"task-input\">\r\n      \r\n      <!-- Botão adicionar tarefa -->\r\n      <button \r\n        class=\"botao\" \r\n        (click)=\"addTask()\">\r\n        Adicionar tarefa\r\n      </button>\r\n      \r\n      <!-- Lista de tarefas da lista atual -->\r\n      <ul class=\"lista-tarefas\">\r\n        <li *ngFor=\"let task of currentListTasks; let i = index\" class=\"task-item\">\r\n          <!-- Modo de visualização -->\r\n          <span *ngIf=\"!isEditingTask(currentList!, i)\" class=\"task-text\">\r\n            {{ task }}\r\n          </span>\r\n          \r\n          <!-- Modo de edição -->\r\n          <input \r\n            *ngIf=\"isEditingTask(currentList!, i)\"\r\n            type=\"text\"\r\n            [(ngModel)]=\"editTaskText\"\r\n            (keydown.enter)=\"onEnterKey('saveTask')\"\r\n            class=\"edit-input\">\r\n          \r\n          <!-- Ações da tarefa -->\r\n          <div class=\"acoes\">\r\n            <!-- Botões de edição (modo visualização) -->\r\n            <ng-container *ngIf=\"!isEditingTask(currentList!, i)\">\r\n              <button \r\n                (click)=\"startEditTask(currentList!, i)\"\r\n                class=\"action-btn\"\r\n                title=\"Editar\">\r\n                <img src=\"assets/img/botao-editar.svg\" alt=\"Editar\">\r\n              </button>\r\n              <button \r\n                (click)=\"removeTask(currentList!, i)\"\r\n                class=\"action-btn\"\r\n                title=\"Excluir\">\r\n                <img src=\"assets/img/lixeira-de-reciclagem.svg\" alt=\"Excluir\">\r\n              </button>\r\n            </ng-container>\r\n            \r\n            <!-- Botões de edição (modo edição) -->\r\n            <ng-container *ngIf=\"isEditingTask(currentList!, i)\">\r\n              <button \r\n                (click)=\"saveTaskEdit()\"\r\n                class=\"action-btn\"\r\n                title=\"Salvar\">\r\n                <img src=\"assets/img/salvar.svg\" alt=\"Salvar\">\r\n              </button>\r\n              <button \r\n                (click)=\"cancelTaskEdit()\"\r\n                class=\"action-btn\"\r\n                title=\"Cancelar\">\r\n                <img src=\"assets/img/cancelar.svg\" alt=\"Cancelar\">\r\n              </button>\r\n            </ng-container>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <!-- Painel de listas cadastradas -->\r\n    <div class=\"listas-cadastradas\">\r\n      <h2>Listas Cadastradas</h2>\r\n      \r\n      <!-- Input para nova lista -->\r\n      <input \r\n        type=\"text\" \r\n        [(ngModel)]=\"newListName\"\r\n        placeholder=\"Digite o nome da lista\"\r\n        (keydown.enter)=\"onEnterKey('addList')\"\r\n        class=\"list-input\">\r\n      \r\n      <!-- Botão adicionar lista -->\r\n      <button \r\n        class=\"botao\" \r\n        (click)=\"addList()\">\r\n        Adicionar Lista\r\n      </button>\r\n      \r\n      <!-- Lista de todas as listas -->\r\n      <ul id=\"outras-listas\">\r\n        <li *ngFor=\"let listName of getListNames()\" class=\"list-item\">\r\n          <!-- Modo de visualização -->\r\n          <span \r\n            *ngIf=\"!isEditingList(listName)\"\r\n            (click)=\"selectList(listName)\"\r\n            class=\"list-name\"\r\n            [class.active]=\"listName === currentList\">\r\n            {{ listName }}\r\n          </span>\r\n          \r\n          <!-- Modo de edição -->\r\n          <input \r\n            *ngIf=\"isEditingList(listName)\"\r\n            type=\"text\"\r\n            [(ngModel)]=\"editListText\"\r\n            (keydown.enter)=\"onEnterKey('saveList')\"\r\n            class=\"edit-input\">\r\n          \r\n          <!-- Ações da lista -->\r\n          <div class=\"acoes\">\r\n            <!-- Botões de edição (modo visualização) -->\r\n            <ng-container *ngIf=\"!isEditingList(listName)\">\r\n              <button \r\n                (click)=\"startEditList(listName)\"\r\n                class=\"action-btn\"\r\n                title=\"Editar\">\r\n                <img src=\"assets/img/botao-editar.svg\" alt=\"Editar\">\r\n              </button>\r\n              <button \r\n                (click)=\"removeList(listName)\"\r\n                class=\"action-btn\"\r\n                title=\"Excluir\">\r\n                <img src=\"assets/img/lixeira-de-reciclagem.svg\" alt=\"Excluir\">\r\n              </button>\r\n            </ng-container>\r\n            \r\n            <!-- Botões de edição (modo edição) -->\r\n            <ng-container *ngIf=\"isEditingList(listName)\">\r\n              <button \r\n                (click)=\"saveListEdit()\"\r\n                class=\"action-btn\"\r\n                title=\"Salvar\">\r\n                <img src=\"assets/img/salvar.svg\" alt=\"Salvar\">\r\n              </button>\r\n              <button \r\n                (click)=\"cancelListEdit()\"\r\n                class=\"action-btn\"\r\n                title=\"Cancelar\">\r\n                <img src=\"assets/img/cancelar.svg\" alt=\"Cancelar\">\r\n              </button>\r\n            </ng-container>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</main>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}