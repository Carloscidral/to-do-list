{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ThemeService {\n  constructor() {\n    this.isDarkThemeSubject = new BehaviorSubject(this.getStoredTheme());\n    this.isDarkTheme$ = this.isDarkThemeSubject.asObservable();\n    // Aplicar tema inicial\n    this.applyTheme(this.isDarkThemeSubject.value);\n  }\n  // Obter tema armazenado\n  getStoredTheme() {\n    const stored = localStorage.getItem('darkTheme');\n    return stored ? JSON.parse(stored) : false;\n  }\n  // Alternar tema\n  toggleTheme() {\n    const newTheme = !this.isDarkThemeSubject.value;\n    this.isDarkThemeSubject.next(newTheme);\n    this.applyTheme(newTheme);\n    localStorage.setItem('darkTheme', JSON.stringify(newTheme));\n  }\n  // Aplicar tema ao body\n  applyTheme(isDark) {\n    if (typeof document !== 'undefined') {\n      if (isDark) {\n        document.body.classList.add('tema-escuro');\n      } else {\n        document.body.classList.remove('tema-escuro');\n      }\n    }\n  }\n  // Obter estado atual do tema\n  isDarkTheme() {\n    return this.isDarkThemeSubject.value;\n  }\n  static {\n    this.ɵfac = function ThemeService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ThemeService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ThemeService,\n      factory: ThemeService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","ThemeService","constructor","isDarkThemeSubject","getStoredTheme","isDarkTheme$","asObservable","applyTheme","value","stored","localStorage","getItem","JSON","parse","toggleTheme","newTheme","next","setItem","stringify","isDark","document","body","classList","add","remove","isDarkTheme","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Lidiomar Cidral\\Desktop\\to-do-list-main\\src\\app\\services\\theme.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ThemeService {\r\n  private isDarkThemeSubject = new BehaviorSubject<boolean>(this.getStoredTheme());\r\n  public isDarkTheme$ = this.isDarkThemeSubject.asObservable();\r\n\r\n  constructor() {\r\n    // Aplicar tema inicial\r\n    this.applyTheme(this.isDarkThemeSubject.value);\r\n  }\r\n\r\n  // Obter tema armazenado\r\n  private getStoredTheme(): boolean {\r\n    const stored = localStorage.getItem('darkTheme');\r\n    return stored ? JSON.parse(stored) : false;\r\n  }\r\n\r\n  // Alternar tema\r\n  toggleTheme(): void {\r\n    const newTheme = !this.isDarkThemeSubject.value;\r\n    this.isDarkThemeSubject.next(newTheme);\r\n    this.applyTheme(newTheme);\r\n    localStorage.setItem('darkTheme', JSON.stringify(newTheme));\r\n  }\r\n\r\n  // Aplicar tema ao body\r\n  private applyTheme(isDark: boolean): void {\r\n    if (typeof document !== 'undefined') {\r\n      if (isDark) {\r\n        document.body.classList.add('tema-escuro');\r\n      } else {\r\n        document.body.classList.remove('tema-escuro');\r\n      }\r\n    }\r\n  }\r\n\r\n  // Obter estado atual do tema\r\n  isDarkTheme(): boolean {\r\n    return this.isDarkThemeSubject.value;\r\n  }\r\n}"],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,YAAY;EAIvBC,YAAA;IAHQ,KAAAC,kBAAkB,GAAG,IAAIH,eAAe,CAAU,IAAI,CAACI,cAAc,EAAE,CAAC;IACzE,KAAAC,YAAY,GAAG,IAAI,CAACF,kBAAkB,CAACG,YAAY,EAAE;IAG1D;IACA,IAAI,CAACC,UAAU,CAAC,IAAI,CAACJ,kBAAkB,CAACK,KAAK,CAAC;EAChD;EAEA;EACQJ,cAAcA,CAAA;IACpB,MAAMK,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAChD,OAAOF,MAAM,GAAGG,IAAI,CAACC,KAAK,CAACJ,MAAM,CAAC,GAAG,KAAK;EAC5C;EAEA;EACAK,WAAWA,CAAA;IACT,MAAMC,QAAQ,GAAG,CAAC,IAAI,CAACZ,kBAAkB,CAACK,KAAK;IAC/C,IAAI,CAACL,kBAAkB,CAACa,IAAI,CAACD,QAAQ,CAAC;IACtC,IAAI,CAACR,UAAU,CAACQ,QAAQ,CAAC;IACzBL,YAAY,CAACO,OAAO,CAAC,WAAW,EAAEL,IAAI,CAACM,SAAS,CAACH,QAAQ,CAAC,CAAC;EAC7D;EAEA;EACQR,UAAUA,CAACY,MAAe;IAChC,IAAI,OAAOC,QAAQ,KAAK,WAAW,EAAE;MACnC,IAAID,MAAM,EAAE;QACVC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,aAAa,CAAC;MAC5C,CAAC,MAAM;QACLH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,aAAa,CAAC;MAC/C;IACF;EACF;EAEA;EACAC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACtB,kBAAkB,CAACK,KAAK;EACtC;;;uCArCWP,YAAY;IAAA;EAAA;;;aAAZA,YAAY;MAAAyB,OAAA,EAAZzB,YAAY,CAAA0B,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}