{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nlet HeaderComponent = class HeaderComponent {\n  constructor(themeService) {\n    this.themeService = themeService;\n    this.isMenuOpen = false;\n    this.isDarkTheme = false;\n  }\n  ngOnInit() {\n    // Inscrever-se para mudanças de tema\n    this.themeService.isDarkTheme$.subscribe(isDark => {\n      this.isDarkTheme = isDark;\n    });\n  }\n  // Alternar menu hambúrguer\n  toggleMenu() {\n    this.isMenuOpen = !this.isMenuOpen;\n    if (typeof document !== 'undefined') {\n      document.body.classList.toggle('menuOpen', this.isMenuOpen);\n    }\n  }\n  // Alternar tema\n  toggleTheme() {\n    this.themeService.toggleTheme();\n  }\n};\nHeaderComponent = __decorate([Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})], HeaderComponent);\nexport { HeaderComponent };","map":{"version":3,"names":["Component","CommonModule","RouterModule","HeaderComponent","constructor","themeService","isMenuOpen","isDarkTheme","ngOnInit","isDarkTheme$","subscribe","isDark","toggleMenu","document","body","classList","toggle","toggleTheme","__decorate","selector","standalone","imports","templateUrl","styleUrls"],"sources":["C:\\Users\\Lidiomar Cidral\\Desktop\\to-do-list-main\\src\\app\\components\\header\\header.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ThemeService } from '../../services/theme.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterModule],\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  isMenuOpen = false;\r\n  isDarkTheme = false;\r\n\r\n  constructor(private themeService: ThemeService) {}\r\n\r\n  ngOnInit(): void {\r\n    // Inscrever-se para mudanças de tema\r\n    this.themeService.isDarkTheme$.subscribe(isDark => {\r\n      this.isDarkTheme = isDark;\r\n    });\r\n  }\r\n\r\n  // Alternar menu hambúrguer\r\n  toggleMenu(): void {\r\n    this.isMenuOpen = !this.isMenuOpen;\r\n    if (typeof document !== 'undefined') {\r\n      document.body.classList.toggle('menuOpen', this.isMenuOpen);\r\n    }\r\n  }\r\n\r\n  // Alternar tema\r\n  toggleTheme(): void {\r\n    this.themeService.toggleTheme();\r\n  }\r\n}"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,YAAY,QAAQ,iBAAiB;AAUvC,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAI1BC,YAAoBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;IAHhC,KAAAC,UAAU,GAAG,KAAK;IAClB,KAAAC,WAAW,GAAG,KAAK;EAE8B;EAEjDC,QAAQA,CAAA;IACN;IACA,IAAI,CAACH,YAAY,CAACI,YAAY,CAACC,SAAS,CAACC,MAAM,IAAG;MAChD,IAAI,CAACJ,WAAW,GAAGI,MAAM;IAC3B,CAAC,CAAC;EACJ;EAEA;EACAC,UAAUA,CAAA;IACR,IAAI,CAACN,UAAU,GAAG,CAAC,IAAI,CAACA,UAAU;IAClC,IAAI,OAAOO,QAAQ,KAAK,WAAW,EAAE;MACnCA,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,UAAU,EAAE,IAAI,CAACV,UAAU,CAAC;IAC7D;EACF;EAEA;EACAW,WAAWA,CAAA;IACT,IAAI,CAACZ,YAAY,CAACY,WAAW,EAAE;EACjC;CACD;AAzBYd,eAAe,GAAAe,UAAA,EAP3BlB,SAAS,CAAC;EACTmB,QAAQ,EAAE,YAAY;EACtBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAACpB,YAAY,EAAEC,YAAY,CAAC;EACrCoB,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWpB,eAAe,CAyB3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}